apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    configurations.all {
        resolutionStrategy.force 'com.android.support:support-v7:28.0.0'
        resolutionStrategy.force 'com.android.support:support-v4:28.0.0'
    }
    signingConfigs {
        release
        config {
            keyAlias 'key0'
            keyPassword 'Alucard1911'
            storeFile file('C:/Users/Alucard/OneDrive/Documents/wifi app app picture/key.jks')
            storePassword 'Alucard1911'
        }
    }
    defaultConfig {
        versionName "3.6"
        versionCode = 58
        minSdkVersion 19
        targetSdkVersion 28
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.config
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
//            useProguard false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard/proguard-project.pro',
//                    'proguard/proguard-google-play-services.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
//            useProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'),
//                    getDefaultProguardFile('proguard-android-optimize.txt'),
//                    'proguard/proguard-project.pro',
//                    'proguard/proguard-google-play-services.pro'
        }
    }
    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("underground") && (names.contains("google") || names.contains("other"))) {
            variant.ignore = true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        abortOnError false
    }
    aaptOptions {
        noCompress 'apk'
    }
}

ext {
    supportLibVersion = '28.0.0'
    gmsVersion = '16.0.4'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:exifinterface:${supportLibVersion}"
    implementation "com.google.firebase:firebase-analytics:${gmsVersion}"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
//    implementation "com.google.firebase:firebase-ads:${gmsVersion}"
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.7'
    implementation 'com.jaredrummler:android-processes:+'
    implementation 'com.github.mjdev:libaums:0.5.5'
    implementation 'org.apache.ftpserver:ftpserver-core:1.1.1'
    implementation 'commons-net:commons-net:+'
//    implementation 'com.google.android.gms:play-services-analytics:10.2.0'
    implementation 'commons-io:commons-io:2.5'
//    implementation 'com.google.firebase:firebase-core:10.2.0'
//    implementation 'com.squareup.leakcanary:leakcanary-android:+'
    implementation 'com.github.bumptech.glide:glide:4.0.0-RC1'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'
}


if (getGradle().getStartParameter().getTaskRequests().toString().contains("Free")) {
    apply plugin: 'com.google.gms.google-services'
}


apply plugin: 'com.google.gms.google-services'
